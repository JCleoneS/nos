import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'dart:async';
import 'menu_drawer.dart'; // ðŸ”¥ Importando o menu novamente

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'NÃ³s',
      theme: ThemeData.light(),
      localizationsDelegates: const [
        GlobalMaterialLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
      ],
      supportedLocales: const [
        Locale('pt', 'BR'),
      ],
      home: const DeclaracoesPage(), // ðŸ”¥ PÃ¡gina inicial com declaraÃ§Ãµes e menu
    );
  }
}

class DeclaracoesPage extends StatefulWidget {
  const DeclaracoesPage({super.key});

  @override
  State<DeclaracoesPage> createState() => _DeclaracoesPageState();
}

class _DeclaracoesPageState extends State<DeclaracoesPage> {
  final List<Map<String, String>> declaracoes = [
    {
      "texto": "Sabe por que eu te amo?\n\nPorque eu jÃ¡ vivi sem vocÃª.\nJÃ¡ fui feliz antes de te conhecer.\nJÃ¡ tive momentos bons sem sua presenÃ§a.\n\nMas nada, nada se compara ao que Ã© ter vocÃª por perto...\nNÃ£o Ã© que eu precise de vocÃª para viver, Ã© que agora que conheci a vida contigo, qualquer coisa sem isso parece menos intensa.\nEu jÃ¡ soube ser feliz sozinho, mas eu quero ser feliz com vocÃª.\n\nEu te amo porque vocÃª Ã© incrÃ­vel, porque vocÃª Ã© vocÃª, e vocÃª Ã© o meu amor.\n\nTe amo, princesa!",
      "assinatura": "JCPS",
      "data": "27.03.2025 - 15:58"
    },
    {
      "texto": "Hoje comeÃ§a nossa 'Primeira' competiÃ§Ã£o... Sinto muito ter de mostrar a vocÃª que eu te amo muito, muito mais do que pode imaginar!\n\nSabe por que eu sei que te amo mais?\n01. Porque eu acordo pensando em vocÃª todos os dias.\n02. Porque jÃ¡ me vi morando com vocÃª.\n03. Porque amo cuidar de vocÃª.\n04. Porque sinto que posso fazer qualquer coisa por vocÃª.\n05. Amo ver o universo nos seus olhos.\n06. Me apaixono pelos seus beijos todas as vezes que seus lÃ¡bios tocam os meus.\n07. Gosto dos seus pensamentos.\n08. Seu corpo Ã© como as notas de uma mÃºsica de amor.\n09. O seu tom de voz Ã© como um abraÃ§o.\n10. Teu abraÃ§o Ã© tÃ£o confortÃ¡vel que me faz querer dormir Ã s vezes, kkkkk.\n\nSinto muito, meu amor, eu quero vocÃª para sempre.\n\nEu amo vocÃª com todo o meu coraÃ§Ã£o, toda minha saÃºde, toda minha fÃ©, todo o meu corpo, toda a minha alma e todo o meu amor.\n\nVocÃª Ã© incrÃ­vel!",
      "assinatura": "JCPS",
      "data": "19.03.2025 - 15:40"
    },
    {
      "texto": "Vou tentar explicar aqui um pouco do que sinto por vocÃª, mas antes disso, um ponto muito importante!\nNÃ£o ligue para os erros! ðŸ˜†\n\nAlgumas psicologias dizem que o amor Ã© uma ilusÃ£o, que o que sentimos por alguÃ©m um dia irÃ¡ passar.\nQue, em algum momento, esse sentimento deixarÃ¡ de existir, e veremos que tudo nÃ£o passa de uma ilusÃ£o passageira.\n\nEu nÃ£o poderia discordar mais.\nComo gostar de vocÃª pode ser um erro?\nComo a alegria que sinto ao ver vocÃª pode ser ilusÃ£o?\nComo querer ter uma vida com vocÃª pode ser um erro?\nComo querer estar com vocÃª para sempre pode ser passageiro?\n\nVou te dizer: nÃ£o importam os momentos ruins, os dias chuvosos, as noites frias, os dias sem cor,\na distÃ¢ncia entre nÃ³s dois, os problemas que estÃ£o por vir, os traumas que jÃ¡ passou,\nas decepÃ§Ãµes que sofremos...\n\nEu quero estar com vocÃª, apoiar, abraÃ§ar, beijar, cheirar, apertar e amar vocÃª para sempre!\n\nVocÃª Ã© incrÃ­vel!",
      "assinatura": "JCPS",
      "data": "03.03.2025 - 22:32"
    }
  ];

  int _indiceAtual = 0;
  late Timer _timer;
  double _opacity = 1.0;

  @override
  void initState() {
    super.initState();
    _trocarTextoAutomaticamente();
  }

  void _trocarTextoAutomaticamente() {
    _timer = Timer.periodic(const Duration(minutes: 1), (timer) { // ðŸ”¥ Alterado para 2 minutos
      setState(() {
        _opacity = 0.0;
      });

      Future.delayed(const Duration(seconds: 1), () {
        setState(() {
          _indiceAtual = (_indiceAtual + 1) % declaracoes.length;
          _opacity = 1.0;
        });
      });
    });
  }

  @override
  void dispose() {
    _timer.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("DeclaraÃ§Ãµes")),
      drawer: MenuDrawer(dataSelecionada: DateTime.now(), atualizarData: (_) {}), // ðŸ”¥ Menu reintegrado
      body: SingleChildScrollView( // ðŸ”¥ Envolvendo em um ScrollView para evitar problemas de layout
        child: Padding(
          padding: const EdgeInsets.all(16),
          child: AnimatedOpacity(
            duration: const Duration(seconds: 1),
            opacity: _opacity,
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start, // ðŸ”¥ Alinhado Ã  esquerda
              children: [
                Text(
                  declaracoes[_indiceAtual]["texto"]!,
                  style: const TextStyle(
                    fontSize: 18,
                    fontWeight: FontWeight.bold, // ðŸ”¥ Destaque no texto
                    color: Colors.black,
                    shadows: [Shadow(color: Colors.grey, offset: Offset(1, 1), blurRadius: 3)], // ðŸ”¥ Contorno suave
                  ),
                ),
                const SizedBox(height: 20),
                Text(
                  declaracoes[_indiceAtual]["assinatura"]!,
                  style: const TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                ),
                Text(
                  declaracoes[_indiceAtual]["data"]!,
                  style: const TextStyle(fontSize: 14, color: Colors.grey),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}